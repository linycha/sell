<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sell.modules.store.dao.OrderCommentMapper" >
  <resultMap id="BaseResultMap" type="com.sell.modules.store.entity.OrderComment" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="order_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="shop_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="parent_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="images" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="score" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="status" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="reply" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_anonymity" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_no, user_id, shop_id, parent_id, content, images, score, status, reply, is_anonymity, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from sell_order_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sell_order_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sell.modules.store.entity.OrderComment" >
    insert into sell_order_comment (id, order_no, user_id, shop_id, parent_id,
      content, images, score,
      status, reply, is_anonymity,create_time)
    values (#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{shopId,jdbcType=VARCHAR},
      #{parent_id,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR},
      #{score,jdbcType=DECIMAL}, #{status,jdbcType=CHAR}, #{reply,jdbcType=VARCHAR},#{isAnonymity,jdbcType=CHAR}, now())
  </insert>
  <insert id="insertSelective" parameterType="com.sell.modules.store.entity.OrderComment" >
    insert into sell_order_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="images != null" >
        images,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="reply != null" >
        reply,
      </if>
      <if test="isAnonymity != null" >
        is_anonymity,
      </if>
      create_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="isAnonymity != null" >
        #{isAnonymity,jdbcType=CHAR},
      </if>
      now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sell.modules.store.entity.OrderComment" >
    update sell_order_comment
    <set >
      <if test="orderId != null" >
        order_no = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="isAnonymity!= null" >
        is_anonymity = #{isAnonymity,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sell.modules.store.entity.OrderComment" >
    update sell_order_comment
    set order_no = #{orderId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      score = #{score,jdbcType=DECIMAL}
      status = #{status,jdbcType=CHAR},
      reply = #{reply,jdbcType=VARCHAR},
      is_anonymity = #{isAnonymity,jdbcType=CHAR},
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectOrderCommentList" parameterType="com.sell.modules.store.dto.QueryCommentDTO" resultType="com.sell.modules.store.entity.OrderComment">
    select order_no, username, shop_id, parent_id,
           content, images, score, c.status, reply, is_anonymity, c.create_time
    from sell_order_comment c
    left join sys_user u on u.id = c.user_id
    where shop_id = #{shopId} and c.del_flag = 0
    <if test="isAnonymity != null and isAnonymity != ''" >
      and is_anonymity = #{isAnonymity}
    </if>
    <if test="status != null and status != '' " >
      and c.status = #{status}
    </if>
    <if test="scoreType == 0" >
      and score between 4 and 5
    </if>
    <if test="scoreType == 1" >
      and score between 2.5 and 4
    </if>
    <if test="scoreType == 2" >
      and score between 1 and 2.5
    </if>
    order by c.create_time desc
  </select>
  <update id="updateReplyByOrderId" parameterType="map">
    update sell_order_comment
    set reply = #{reply}, status = '1'
    where order_no = #{orderNo}
  </update>
</mapper>