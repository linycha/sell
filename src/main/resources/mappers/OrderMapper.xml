<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sell.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.sell.entity.Order" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_no" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="deliveryman_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="shipping_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="payment" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="payment_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="postage" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="desc" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="payment_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="receive_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="get_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="complete_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_no, user_id, deliveryman_id, shipping_id, payment, payment_type, postage, 
    status, desc, payment_time, receive_time, get_time, complete_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sell_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sell_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sell.entity.Order" >
    insert into sell_order (id, order_no, user_id, 
      deliveryman_id, shipping_id, payment, 
      payment_type, postage, status, 
      desc, payment_time, receive_time, 
      get_time, complete_time, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, 
      #{deliverymanId,jdbcType=INTEGER}, #{shippingId,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, 
      #{paymentType,jdbcType=INTEGER}, #{postage,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{desc,jdbcType=VARCHAR}, #{paymentTime,jdbcType=TIMESTAMP}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{getTime,jdbcType=TIMESTAMP}, #{completeTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sell.entity.Order" >
    insert into sell_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="deliverymanId != null" >
        deliveryman_id,
      </if>
      <if test="shippingId != null" >
        shipping_id,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="postage != null" >
        postage,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="desc != null" >
        desc,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="receiveTime != null" >
        receive_time,
      </if>
      <if test="getTime != null" >
        get_time,
      </if>
      <if test="completeTime != null" >
        complete_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deliverymanId != null" >
        #{deliverymanId,jdbcType=INTEGER},
      </if>
      <if test="shippingId != null" >
        #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="postage != null" >
        #{postage,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null" >
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="getTime != null" >
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null" >
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sell.entity.Order" >
    update sell_order
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="deliverymanId != null" >
        deliveryman_id = #{deliverymanId,jdbcType=INTEGER},
      </if>
      <if test="shippingId != null" >
        shipping_id = #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="postage != null" >
        postage = #{postage,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null" >
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="getTime != null" >
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null" >
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sell.entity.Order" >
    update sell_order
    set order_no = #{orderNo,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER},
      deliveryman_id = #{deliverymanId,jdbcType=INTEGER},
      shipping_id = #{shippingId,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=INTEGER},
      postage = #{postage,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      desc = #{desc,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      get_time = #{getTime,jdbcType=TIMESTAMP},
      complete_time = #{completeTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>