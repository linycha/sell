<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sell.modules.sys.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.sell.modules.sys.entity.User">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="open_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="mobile" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="head_img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, open_id, username, password, sex, mobile, head_img, role, create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="integer" resultType="com.sell.modules.sys.entity.User">
    select id, username, mobile, head_img, password
    from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <insert id="insert" parameterType="com.sell.modules.sys.entity.User">
    insert into sys_user (id, username,
      password, sex, mobile,
      head_img,
      role, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{mobile,jdbcType=VARCHAR},
      #{headImg,jdbcType=VARCHAR},
      #{role,jdbcType=INTEGER}, now(), now()
      )
  </insert>
  <insert id="insertFeedback" parameterType="com.sell.modules.store.entity.Feedback">
    insert into sell_feedback (id, user_id, content,
      type, create_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
     #{type,jdbcType=CHAR},now())
  </insert>
  <insert id="insertSelective" parameterType="com.sell.modules.sys.entity.User">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
        create_time,
        update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
        now(),
        now(),
    </trim>
  </insert>
  <insert id="insertCustomerRole" parameterType="integer">
    insert into sys_user_role values (#{userId},"1")
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sell.modules.sys.entity.User">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sell.modules.sys.entity.User">
    update sys_user
    set
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="checkUsername" parameterType="String" resultType="int">
    select count(1) from sys_user
    where username=#{username}
  </select>
  <select id="checkMobile" parameterType="String" resultType="int">
    select count(1) from sys_user
    where mobile=#{mobile}
  </select>
  <select id="selectLogin" parameterType="map" resultType="com.sell.modules.sys.entity.User">
    select
    <include refid="Base_Column_List"/>
    from sys_user where
    username=#{username} and password=#{password}
  </select>
  <update id="updatePasswordByUsername" parameterType="map">
    update sys_user set
    password = #{password},update_time = now()
    where username = #{username}
  </update>
  <select id="checkPassword" resultType="int" parameterType="map">
    select count(1) from mmall_user
    where password = #{password}
    and id = #{userId}
  </select>
  <select id="selectByUsernameOrUserId" parameterType="map" resultMap="UserRolePermissionMap">
    select s.id,s.username,s.password,s.status as status,s.mobile,s.sex,s.head_img,
    r.id as rid, r.name as rname,
    p.name as pname, p.url as url,h.id as shopId,d.id as deliveryId
    from sys_user s
    left join sys_user_role ur on ur.user_id = s.id
    left join sys_role r on r.id = ur.role_id
    left join sys_role_permission rp on rp.role_id = r.id
    left join sys_permission p on p.id = rp.per_id
    left join sell_shop h on h.user_id = s.id
    left join sell_delivery d on d.user_id = s.id
    where 1=1
    <if test="username != null and username != ''">
      and s.username=#{username}
    </if>
    <if test="userId != null and userId != ''">
      and s.id = #{userId}
    </if>
    and s.del_flag = 0
  </select>
  <select id="selectUsernameByMobile" parameterType="String" resultType="String">
    select username from sys_user
    where mobile=#{mobile}
  </select>

  <select id="selectRoleByUserId" parameterType="String" resultType="com.sell.modules.sys.entity.Role">
    select r.id, r.name
    from sys_user s
    left join sys_user_role ur on ur.user_id = s.id
    left join sys_role r on r.id = ur.role_id
    where s.id=#{userId}
  </select>
  <select id="selectUserList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_user
  </select>
  <resultMap id="UserRolePermissionMap" type="com.sell.modules.sys.entity.User">
    <id column="id" javaType="java.lang.Integer" property="id" />
    <id column="shopId" javaType="java.lang.Integer" property="shopId" />
    <id column="deliveryId" javaType="java.lang.Integer" property="deliveryId" />
    <result column="username" javaType="java.lang.String" jdbcType="VARCHAR" property="username" />
    <result column="password" javaType="java.lang.String" jdbcType="VARCHAR" property="password" />
    <result column="sex" javaType="java.lang.String" jdbcType="CHAR" property="sex"/>
    <result column="mobile" javaType="java.lang.String" jdbcType="VARCHAR" property="mobile"/>
    <result column="head_img" javaType="java.lang.String" jdbcType="VARCHAR" property="headImg"/>
    <result column="status" javaType="java.lang.String" jdbcType="VARCHAR" property="status" />
    <result column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    <result column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    <association property="roleList" javaType="com.sell.modules.sys.entity.Role" resultMap="RoleMap" column="id"/>

  </resultMap>
  <resultMap id="RoleMap" type="com.sell.modules.sys.entity.Role">
    <id column="rid" property="id" />
    <result column="rname" property="name"/>
    <collection property="permissions" ofType="com.sell.modules.sys.entity.Permission" column="id">
      <id column="pid" property="id"/>
      <id column="pname" property="name"/>
      <id column="url" property="url"/>
    </collection>
  </resultMap>
</mapper>